DocumentRoot TEST comp
PerlSetVar MasonCompRoot TEST comp
PerlSetVar MasonDataDir TEST data
#PerlSetVar MasonDeferStatusCheck 1
PerlModule MasonOOCallbackSetup
PerlModule MasonCallbackTester
SetHandler perl-script
PerlHandler MasonCallbackTester
<Location /oop>
  PerlHandler MasonOOCallbackSetup
</Location>
<Location /empty>
  PerlHandler MasonOOCallbackEmpty
</Location>
<Location /req_sub>
  PerlHandler MasonOOCallbackSubReq
</Location>
<Location /all>
  PerlHandler MasonOOCallbackAll
</Location>
<Location /attrs>
  PerlHandler MasonOOCallbackCombined
</Location>
<Location /ooconf_test>
  SetHandler perl-script
  PerlSetVar MasonCbClasses _ALL_
  PerlHandler MasonX::ApacheHandler::WithCallbacks
</Location>
<Location /ooconf_list>
  SetHandler perl-script
  PerlSetVar MasonCbClasses OOTester
  PerlAddVar MasonCbClasses OOTesterSub
  PerlHandler MasonX::ApacheHandler::WithCallbacks
</Location>
<Location /conf_test>
  SetHandler perl-script
  PerlSetVar MasonDefaultPriority 3
  PerlSetVar MasonDefaultPkgKey CBFoo
  PerlAddVar MasonCallbacks "{ cb_key  => 'priority', cb => sub { $_[0]->request_args->{result} = $_[0]->priority } }"
  PerlAddVar MasonCallbacks "{ cb_key  => 'pkg_key', cb => sub { $_[0]->request_args->{result} = $_[0]->pkg_key } }"
  PerlAddVar MasonPreCallbacks "sub { my $args = $_[0]->request_args; $args->{result} = uc $args->{result} if $args->{do_upper} }"
  PerlAddVar MasonPostCallbacks "sub { my $args = $_[0]->request_args; $args->{result} = lc $args->{result} if $args->{do_lower} }"
  PerlHandler MasonX::ApacheHandler::WithCallbacks
</Location>
